/* display:flex
 flexbox 컨테이너를 만들고 그안에 요소크기,요소들 사이에 공간을 균등하게 만들지말지  
 정하고 보기좋게 배치를 하고 창크기에따라 변화하도록 만든다     */
body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    text-align: center;
}

/* flex-direction   flexbox 안에는 가로,세로축이있다 본축은 가로축
flexbox 기본!  @좌-우정렬이 기본    flex-direction으로 바꿀수있는데
 일단 기본은 flex-direction:row; 좌-우임   우-좌로 바꾸고싶으면 row-reverse; 
 상-하 column   하-상 column-reverse;  */
#container {
    background-color: #003049;
    width: 90%;
    /* height: 500px; */
    margin: 0 auto;
    /* margin auto 가운데정렬 */
    border: 5px solid #003049;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

/* justify-content   요소를 시작점으로 정렬. 기본값은 justify-content:flex-start;
 flex-direction이 row 가로일때는 왼쪽, column 세로일땐 위에서부터 정렬.    
 justify-content:flex-end; 당구점수판처럼 왼쪽에있던 요소를 오른쪽으로 밀어준다
 row가로배치일땐 오른쪽, column세로배치일땐 아래로 밀어줌 
 justify-content:center 가운데정렬    
 justify-content:space-between   바깥쪽여백을다없애고 요소사이에만 여백을 동등하게줌  
 space-around; 요소의둘레에 똑같은 면적의 여백을 줌=맨왼쪽맨오른쪽여백크기가 반쪽임
space-evenly; 요소사이와 맨왼쪽오른쪽까지도 모두 동일크기의 여백을줌=모든여백크기가동일
 */


/* flex-direction:column  컨테이너 height은 500px인데,  200px인 박스가 5개면 세로높이가 1000px이필요하니까
 박스크기가 자동으로 작아진다 만약 height을 1200px로 늘리면 200px이 남는다.이렇게 유연하게 자동으로 크기가 조절된다.*/

/* flex-wrap:wrap  을하면 왼쪽에 상-하 정렬돼있던 박스들이 오른쪽으로 
ㅁ  ㅁ  ㅁ     이런식으로 이동한다(좌-우).  여기서 wrap-reverse쓰면 우-좌. 반대방향.
ㅁ  ㅁ   
 flex-wrap=  교차축의방향으로 정렬생김.  줄바꿈이라보면됨
 flex-direction:row; flex-wrap:wrap ->좌에서우 가기본축이니까  상-하 정렬생김 
 ㅁ ㅁ ㅁ ㅁ  이런식.  wrap-reverse쓰면 하-상으로 바뀜 좌-우는안바뀜  
 ㅁ ㅁ
 nowrap; 디폴트.줄바꿈없음    */

#container div {
    width: 200px;
    /* max-width: 300px;  최대 너비 300px이라 basis(최종너비)가 600px이어도 300까지만커짐*/
    /* min-width: 100px; 최소너비 100px까지만 작아짐*/
    height: 200px;
    flex-basis: 600px;
    /* flex-grow: 1;  전체박스크기를 1비율로 크게만듦 */
    /* width를200px로정했지만 flex-basis가 600px이니까 최종너비는 600px. */
}

/* div:nth-of-type(1) {
    flex-grow: 1;      1번박스를 1비율만큼 크게하고,2비율만큼 줄어들게
    flex-shrink: 2;
}

div:nth-of-type(5) {
    flex-grow: 2;
} */

main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display: flex;
    /* 색깔없는 테두리만있는 컨테이너박스를 만듦 */
}

main .sidebar {
    background-color: #6930c3;
    flex: 1 2 300px;
    /* 속기법으로 grow:1 shrink:2 basis:300px로 작은 사이드박스 2개를 만듦  */
}

main .maincontent {
    background-color: #80ffdb;
    flex: 2 1 800px;
    /* 속기법으로 grow:2 shrink:1 basis:800px 인 큰메인박스 1개 만듦  */
}

/* html에 인라인으로 썼던 5개색깔박스 안나타나다가 css에 width,height 쓰니 나타남
 블록요소니 처음에 세로로 나열됐는데 display:flex; 하니까 갑자기 가로로바뀜 */

/* flex-direction:row-reverse; 가되면 우-좌정렬이됨 주축이 '우'니까 
justify-content:flex-end 는 콘텐츠를 왼쪽끝으로 보냄 주축에따라 바뀜=flex-direction에
따라바뀜 */

/* align-items: 교차축을 따른다 justify-content와 반대
flex-start 디폴트. 교차축의 시작점을 기준
flex-end; 교차축의끝으로감.   center;중앙 
flex-difection:row로 좌-우 기본정렬 돼있던 박스를 justify-content로 center로 보내면 맨윗줄 가운데로 간다.
이상태에서 align-items:flex-end; 를쓰면 교차축맨아래로 가니까 맨아랫줄 가운데로 간다.
이런식으로 교차축으로 이동시키는 역할을한다.
justify-content와 align-items 둘다 center로 쓰면 중앙정렬이 된다.박스크기들을 다르게 해도 중앙정렬유지된다

 align-items:baseline; 박스안에 텍스트가 있으면 박스들은 중앙정렬이지만 텍스트는 윗줄에 들쭉날쭉있다
 그럴때 baseline을쓰면 텍스트기준정렬 되면서 텍스트가 맨윗줄로 가고 박스도 맨윗줄로 간다 
 글자크기가 다를경우에 각글자를 잇는 밑줄을 긋는다고 생각하고 그 밑줄에 맞춰 정렬된다
 hello 만봐도 h와 e가 다른데 밑줄에 맞춰 정렬이된다 */

/* align-content  wrap이 작동됐을때 교차축으로 이동시킴  flex-wrap이 필수 안그럼작동안함  wrap이 작동돼서 
 ㅁ ㅁ ㅁ  이렇게퍼져있을때  ㅁㅁㅁ    align-content:center를 써서 중앙으로 모아주거나                             
 ㅁ ㅁ                      ㅁㅁ     flex-start 교차축시작점, flex-end 교차축끝으로보냄                             
 align-content:space-between; 요소간중간여백 수직이 주축일때 가로요소 사이 공간을 조정 */

/* align-self 는 align-items와 비슷, 교차축을 기준으로 단일 요소의 위치를 바꿈 
 align-self:flex-end;center;   div:nth-of-type(3) {align-self:center} 3번박스만 센터로.
 이런식으로 요소한개를 옮김*/

/* flex-basis  가 너비의기준이됨 width를지정해도 무시됨 너비를 조정하면되는데
 flex-basis를 쓰는이유는? 주축이 가로면 너비, 세로면 높이가 변한다
예를들어 flex-direction:row고 width:200px;  flex-basis:400px 이면 width는 무시되고 너비는 400px이됨
반대로 column일때 height:200px; flex-basis:300px 이면 높이는 300px이된다.
wrap(줄바꿈)일땐 basis를 700px처럼 크게설정하면 줄바꿈이 되고 
nowrap 일땐 남는공간 안에서 너비나 높이가 커질수있다*/

/*flex-grow   div:nth-of-type(1) {flex-grow:1;} flex요소 크기를늘려준다 nth-of-type을이용해
한개의요소만 키울수도있다 나머지박스들은 크기가 그대로인데 1번박스만 남은공간을 다차지한다
아니면 전체크기를 균등하게 차지할수도있다 창을줄이더라도 비율은유지된다 
flex-wrap이적용돼있을때 창을계속줄이면 요소들이 아래칸으로내려간다

max-width:300px;요소들이늘어나다가 300px이넘어가면 더이상안늘어나고 좌우공간에뒷배경이
보인다 flex-grow로 크기를 크게설정해도 max-width를 정해놓으면 더이상늘어나지않는다
min-width 너무작아지는것을 방지할수있다

flex-grow를  초록박스1; 보라박스2; 로정하면 원래 초록박스가 200px일때 250px로 ,
보라박스는 300px에서 400px로 커진다 초록 50px 보라 100px 커진거니까 2배 커짐

nowrap일경우(줄바꿈이없을경우) flex-grow를 설정해놔도 flex-basis를 500px로 정하면 
한줄의 총너비의 한계때문에 500px까지 커지진못하고 비율도 1; 2; 로되지않고 동일한크기에서 멈춘다 */

/* flex-shrink 요소들이 줄어드는비율을 정함  flex-grow와 반대.
 nth-of-type(1){flex-shrink:2}을통해 한개만 줄일수도있음. 그럼 1번박스가
2비율만큼 줄어든다  한 박스를 0으로 정하면 그박스만 빼고 나머지들은 줄어듦*/

/* flex속기법  flex: 2 2 10%; 
3개- flex-grow flex-shrink flex-basis  2개 flex-grow flex-shrink 
2개인데 2번째오는숫자단위가 px이나 em이라면 flex-grow flex-basis 
단위없는 숫자 1개 grow;     flex: em,%,min-content 이단위들이쓰이면 1개 basis 
basis만 % px em 단위가있고  grow, shrink단위없음
잘 보면 grow가 보통 맨 앞에오고 단위가 붙으면 무조건 basis.
colt says flex속기 유용*/