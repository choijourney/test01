body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    /* height: 500px; */
    margin: 0 auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: row;
    justify-content: center;
    /* flex-wrap: wrap; */
    /* align-items: flex-start; */
    /* align-content: space-between; */
}

#container div {
    width: 200px;
    /* max-width: 300px; */
    /* min-width: 100px; */
    height: 200px;
    text-align: center;
    flex-basis: 600px;
    /* flex-grow: 1; */
}

/* div:nth-of-type(2) {
    align-self: center;
}

div:nth-of-type(3) {
    align-self: flex-end; 
 } */

/* div:nth-of-type(1) {
    flex-grow: 1;
    flex-shrink: 2;
}

div:nth-of-type(5) {
    flex-grow: 2;
} */

main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display: flex;
}

main .sidebar {
    background-color: #6930c3;
    flex: 1 2 300px;
}

main .maincontent {
    background-color: #80ffdb;
    flex: 2 1 800px;
}

/* html에 인라인으로 썼던 5개색깔박스 안나타나다가 css에 width,height 쓰니 나타남
 블록요소니 처음에 세로로 나열됐는데 display:flex; 하니까 갑자기 가로로바뀜 */
/* flexbox 기본!   @좌-우정렬이 기본    flex-direction으로 바꿀수있는데
 일단 기본은 flex-direction:row; 임   우-좌로 바꾸고싶으면 flex-direction:row-reverse; 
 상-하 column   하-상 column-reverse; 
 */
/* justify-content:flex-start; -기본정렬    flex-end; -끝을컨테이너끝과맞춰줌
ex) flex-direction:row; flex-end; 일때 오른쪽끝변과맞춰끝남 
center; 는 요소를 주축을따라 중앙으로보냄
space-between; 은 바깥쪽여백을다없애고 요소사이에만 여백을 동등하게줌  
space-around; 요소의둘레에 똑같은 면적의 여백을 줌=맨왼쪽맨오른쪽여백크기가 반쪽임
space-evenly; 요소사이,요소와컨테이너 사이에도 모두 동일크기의 여백을줌=모든여백크기가동일*/
/* flex-direction:row-reverse; 가되면 우-좌정렬이됨 주축이 '우'니까 
justify-content:flex-end 는 콘텐츠를 왼쪽끝으로 보냄 주축에따라 바뀜=flex-direction에
따라바뀜 주축이 row면 row로보냄 column이면 column으로 보냄
  */
/*flex-direction:column; flex-wrap:wrap ->요소가 위에서 아래로 우로 열이생기면서정렬 
  wrap-reverse; 반대방향.위에서아래는 같지만 우에서 좌로정렬  flex-wrap=줄바꿈이라보면됨
 flex-direction:row; flex-wrap:wrap ->좌에서우 가기본축 위에서아래로 정렬생김 
 nowrap; 디폴트.   wrap은 교차축의방향으로 정렬생김. 주축이 세로라면 교차축인 가로정렬.*/
/* align-items:flex-start 디폴트. flex-end; 교차축의끝으로감.   center;중앙 
교차축으로 보냄 가로면 세로로보내고 세로면 가로로보냄
 baseline; 텍스트밑에줄을긋는다생각하고 그기준선에맞춰정렬*/
/* align-content가 작동하려면 flex-wrap이 필수 안그럼작동안함 
수직을 주축으로할때 가로요소 사이 공간을 조정 
space-between; 요소간중간여백*/
/* align-self:flex-end;center;등 한요소씩만움직일때씀 nth-of-type()과함께 하나씩쓸때좋음 */

/* flex-basis 요소가 한줄로 늘어서있을때 flex-basis가 너비의기준이됨 width를지정해도
무시됨 너비를 조정하면되는데 flex-basis를 쓰는이유는? 가로주축에 걸쳐있기때문 하지만 세로
로바꾼다면 세로로길어짐 즉,요소가 배치될때 최초크기임 주축의 방향에따라 너비도,높이도됨
남는공간이 있을때 (예를들어nowrap일때) 너비나 높이가 계속커질수있다*/
/* div:nth-of-type() {flex-grow:1;} flex요소를 크기를늘려준다 nth-of-type을이용해
한개의요소만 키울수도있고 flex-grow:1; 전체크기를 균등하게 차지할수있다 창을줄이더라도
비율은유지된다 창을계속줄이면 flex-wrap이적용돼있기때문에 요소들이 아래칸으로내려간다
nowrap일경우(줄바꿈이없을경우)flex-grow 비율을 1;2; 요소마다따로따로 설정해놔도 
flex-basis가 500px처럼 크다면 한줄의 총너비의 한계때문에 500px까지 
커지진못하고 비율도 1;2; 로되지않고 동일한크기에서 멈춘다 */
/* max-width:300px;요소들이늘어나다가 300px이넘어가면 더이상안늘어나고 좌우공간에뒷배경이
보인다 flex-grow로 비율을 크게설정해도 max-width를 정해놓으면 더이상늘어남
min-width 너무작아지는것을 방지할수있다 */
/* flex-shrink 컨테이너에 충분한공간이없을때 요소들이 줄어드는비율을 정함 
flex-grow와 반대. nth-of-type()을통해 한개만 줄일수도있음. 한요소를 0으로 정하면 
그요소만 빼고 나머지들은 줄어듦*/
/* flex속기법 3개- flex-grow flex-shrink flex-basis; 2개 grow shrink; 2개인데 px이나
em이라면 grow basis; 1개 grow;  basis만 % px em 단위가있고 grow shrink단위없음
colt says flex속기 유용하다함*/